generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Camiones {
  id         String     @id @unique(map: "id") @default(uuid())
  tag        String     @unique @db.VarChar(255)
  patente    String     @unique @db.VarChar(255)
  modelo     String     @db.VarChar(255)
  capacidad  Float      @db.Float
  companiaId String
  compania   User       @relation(fields: [companiaId], references: [email], onUpdate: Cascade, onDelete: Cascade)
  sensores   Sensores[]

  @@index([companiaId])
}

model Sensores {
  id             Int      @id @unique(map: "id") @default(autoincrement())
  temperatura    Float    @db.Float
  humedad        Float    @db.Float
  latitud        Float    @db.Float
  longitud       Float    @db.Float
  peso           Float    @db.Float
  tiempoMedicion DateTime @db.Timestamp()
  tiempoDB       DateTime @default(now())
  idCamion       String
  Camion         Camiones @relation(fields: [idCamion], references: [tag], onUpdate: Cascade, onDelete: Cascade)

  @@unique([idCamion, tiempoMedicion])
  @@index([idCamion])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index(userId)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  camiones      Camiones[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
